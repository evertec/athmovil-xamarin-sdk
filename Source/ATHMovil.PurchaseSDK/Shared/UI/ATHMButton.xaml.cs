using System.Reflection;
using Xamarin.Forms;namespace ATHMovil.Purchase.UI{    public enum Theme    {        Classic,        Light,        Dark    }    public enum Language    {        Default,        Spanish,        English    }    public sealed partial class ATHMButton : ImageButton    {        private static readonly BindableProperty ThemeProperty = BindableProperty.Create("Theme", typeof(Theme), typeof(ATHMButton), Theme.Classic, BindingMode.TwoWay);        private static readonly BindableProperty LanguageProperty = BindableProperty.Create("Language", typeof(Language), typeof(ATHMButton), Language.Default, BindingMode.TwoWay);        public Theme Theme        {            get { return (Theme)GetValue(ThemeProperty); }            set { SetValue(ThemeProperty, value); }        }        public Language Language        {            get { return (Language)GetValue(LanguageProperty); }            set { SetValue(LanguageProperty, value); }        }        public ATHMButton() : base()        {            InitializeComponent();            BorderWidth = Theme.BorderWidth();            Color colorToSet = Theme.BackGroundColor();            this.SetOnAppTheme<Color>(ImageButton.BackgroundColorProperty, colorToSet, colorToSet);            Source = ImageSource.FromResource(Theme.ImageName(Language), typeof(ImageResource).GetTypeInfo().Assembly);
        }        protected override void OnPropertyChanged(string propertyName)        {            base.OnPropertyChanged(propertyName);            if (propertyName == ThemeProperty.PropertyName || propertyName == LanguageProperty.PropertyName)            {                Color colorToSet = Theme.BackGroundColor();                this.SetOnAppTheme<Color>(ImageButton.BackgroundColorProperty, colorToSet, colorToSet);                Source = ImageSource.FromResource(Theme.ImageName(Language), typeof(ImageResource).GetTypeInfo().Assembly);                BorderWidth = Theme.BorderWidth();            }        }    }}