using System.Globalization;using ATHMovil.Purchase.UI;using ATHMovil.Purchase.Constants;using ATHMovil.Purchase.Extension;namespace ATHMovil.Purchase.UI{    public enum Language    {        Default,        Spanish,        English    }    internal static class ThemeExtension    {        /// <summary>        /// Get the border with for the light is going to be 0.5 otherwise 0.0        /// </summary>        /// <param name="target">Current theme of the application</param>        /// <returns>for light returns 0.5 otherwise 0</returns>        internal static double BorderWidth(this Theme target)        {            if (target == Theme.Light)            {                return 0.5;            }            return 0.0;        }        /// <summary>        /// Returns the color base on the current theme        /// </summary>        /// <param name="target">Current instance Theme</param>        /// <returns>White for the light, DarkGray for Night or Orange</returns>        internal static Color BackGroundColor(this Theme target)        {            if (target == Theme.Light)            {                return Colors.White; //blanco            }            if (target == Theme.Dark)            {                return Colors.DarkGray; //gris oscuro            }            return Colors.Orange; //naranja        }        /// <summary>        /// Image name base on the current theme and the Language        /// </summary>        /// <param name="theme">Current theme selected by the user or Language system</param>        /// <param name="Language">Current Language of the application, the Language is for the posfix En or Es</param>        /// <returns>The full path of the image for examploe ATHMovil.PurchasSDK.Images.PrimaryEn.png</returns>        internal static string ImageName(this Theme theme, Language language)        {            string prefix = "_" + language.Posfix().ToLower();            string resourceName = ResourcesUI.PrimaryImage;            if (theme == Theme.Light)            {                resourceName = ResourcesUI.SecondaryImage;            }            resourceName += prefix;            return resourceName;        }    }    internal static class LanguageExtension    {        /// <summary>        /// Postfix base on the Language parameter         /// </summary>        /// <param name="Language">System Language</param>        /// <returns> if the Language is the default will return Es or En, for english En and Spanish Es</returns>        internal static string Posfix(this Language language)        {            if (language == Language.Default)            {                if (CultureInfo.CurrentCulture.IsEnglish())                {                    return StringsConstants.PosfixEn;                }                return StringsConstants.PosfixEs;            }            if (language == Language.English)            {                return StringsConstants.PosfixEn;            }            return StringsConstants.PosfixEs;        }    }}